services:
  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
#    volumes:
#      - ./postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test_network

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes
    networks:
      - test_network

  minio1:
    image: minio/minio
    command: server /data --console-address ":9001"
    # if many containers: server http://localhost:9000/mnt/drive-{1...4} --console-address ":9001"
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: "user"
      MINIO_ROOT_PASSWORD: "password"
    #      MINIO_DEFAULT_BUCKETS: "buck1"
    #      MINIO_SERVER_URL: "http://minio.yourdomen.com:9000"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio/data:/data
      - ./minio/config:/root/.minio
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - test_network


#  backend:
#    image: test
#    ports:
#      - "8000:8000"
#    depends_on:
#      postgres:
#        condition: service_healthy
#    environment:
#      - DATABASE_URL=postgres://postgres@postgres/postgres
#    networks:
#      - test_network

networks:
  test_network:
    name: test_network